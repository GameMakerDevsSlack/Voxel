<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init Shaders
SSAO_INIT();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> /// Debug
debugWidth  = 240;
debugHeight = 200;
debugX      = view_wview[0] - 16 - debugWidth;
debugY      = view_hview[0] - 16 - debugHeight;

// Sliders
slider_radius = instance_create(debugX + 16, debugY + 16, obj_slider);
slider_radius.text = "Radius";
slider_radius.valueMIN    = 0.2;
slider_radius.valueMAX    = 5.0;
slider_radius.offsetX     = 90;
slider_radius.sliderWidth = 118;
slider_radius.sliderX     = getSliderPositionFromValue( slider_radius, global.SSAO_RADIUS );

slider_strength = instance_create(debugX + 16, debugY + 48, obj_slider);
slider_strength.text = "Strength";
slider_strength.valueMIN    = 0.05;
slider_strength.valueMAX    = 0.5;
slider_strength.offsetX     = 90;
slider_strength.sliderWidth = 118;
slider_strength.sliderX     = getSliderPositionFromValue( slider_strength, global.SSAO_STRENGTH );

slider_power = instance_create(debugX + 16, debugY + 80, obj_slider);
slider_power.text = "Power";
slider_power.valueMIN    = 1;
slider_power.valueMAX    = 32;
slider_power.offsetX     = 90;
slider_power.sliderWidth = 118;
slider_power.sliderX = getSliderPositionFromValue( slider_power, global.SSAO_POWER );

slider_blur = instance_create(debugX + 16, debugY + 112, obj_slider);
slider_blur.text = "SSAO Blur";
slider_blur.valueMIN    = 0;
slider_blur.valueMAX    = 4;
slider_blur.offsetX     = 90;
slider_blur.sliderWidth = 118;
slider_blur.sliderX = getSliderPositionFromValue( slider_blur, global.SSAO_BLUR_PASSES );


checkbox_ssao = instance_create(debugX + 16, debugY + 144, obj_checkbox);
checkbox_ssao.text = "Render SSAO";
checkbox_ssao.value = global.SSAO_ENABLE;

checkbox_diffuse = instance_create(debugX + 16, debugY + 176, obj_checkbox);
checkbox_diffuse.text = "Render Diffuse";
checkbox_diffuse.value = global.DIFFUSE_ENABLE;


// Sliders
draw_set_font( fnt_debug2 );
draw_set_alpha( 0.75 );
draw_set_color( c_white );
draw_text( debugX + 16, debugY + 16, "Strength");
draw_text( debugX + 16, debugY + 32, "Radius");

// counters
fps_real_avg_cum    = 1;
fps_real_count      = 0;
fps_real_avg        = fps_real;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Modify SSAO


// change displY of FBOS
if ( keyboard_check_pressed(vk_space) ) {
    global.displayFBO = !global.displayFBO;
}

// Regenerate SSAO kernal
if ( keyboard_check_pressed(vk_enter) ) {
    global.SSAO_KERNEL = generateRandomPoissonDisk( global.SSAO_SAMPLES );
}

// Regenerate SSAO noise
if ( keyboard_check_pressed(vk_rshift) ) {
    generateNoise( global.SSAO_NOISE );
}

// Change SSAO radius
global.SSAO_RADIUS = slider_radius.value;

// Change SSAO strength
global.SSAO_STRENGTH = slider_strength.value

// Change SSAO power
global.SSAO_POWER = round(slider_power.value);

// Change SSAO blur
global.SSAO_BLUR_PASSES = round(slider_blur.value);

// Enable/disable SSAO
global.SSAO_ENABLE = checkbox_ssao.value;

// Enable/disable diffuse
global.DIFFUSE_ENABLE = checkbox_diffuse.value;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the final SSAO
SSAO_DRAW();

room_caption = string(fps);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render the SSAO buffers offscreen
SSAO_RENDER();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
