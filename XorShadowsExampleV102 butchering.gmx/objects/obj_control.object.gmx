<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup
randomize()

d3d_start()
draw_set_alpha_test(1)
texture_set_interpolation(0)
draw_set_colour(c_white)
draw_set_font(fnt_main)
size = 1024;
xs_setup(size)
demo = 0;
soft = 2;
help = 1;
debug = 0;
acol = $000000;
lcol = $ffffff;
xs_set_colors(acol,lcol)

//Demo 1 models
model_torus_knot = d3d_model_create();
model_teapot = d3d_model_create();
model_bunny = d3d_model_create();
d3d_model_load(model_torus_knot, "torus_knot.d3d")
d3d_model_load(model_teapot, "teapot.d3d")
d3d_model_load(model_bunny, "bunny.d3d")
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera variables
zdir = 0;
z = 6;
aspect = view_wview[0]/view_hview[0];
lx = -160;
ly = -160;
lz = 160;
lx2 = 64;
ly2 = 64;
lz2 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update camera
if mouse_check_button(mb_left)
{
    var wx,wy,ww,wh;
    wx = window_mouse_get_x();
    wy = window_mouse_get_y();
    ww = window_get_width()/2;
    wh = window_get_height()/2;
    if window_has_focus() {window_mouse_set(ww,wh)}
    direction += (ww-wx)/5;
    zdir = clamp(zdir+(wh-wy)/5,-89,89);
}

smooth = point_distance(x,y,xprevious,yprevious)*0.125+0.5;
speed = (keyboard_check(ord("W"))-keyboard_check(ord("S")))*4;
var h = (keyboard_check(ord("D"))-keyboard_check(ord("A")))*4;
x += lengthdir_x(h,direction-90)*smooth;
y += lengthdir_y(h,direction-90)*smooth;
z += (keyboard_check(ord("Q"))-keyboard_check(ord("E")))*4;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update light
var R = keyboard_check_pressed(vk_pageup)-keyboard_check_pressed(vk_pagedown);
if abs(R)
{
    size = power(2,((log2(size)+R-4) mod 4)+8);
    xs_resize_depthmap(size)
}
if keyboard_check(vk_space)
{
    var X,Y,Z;
    X = dsin(direction+90)*dcos(zdir);
    Y = dcos(direction+90)*dcos(zdir);
    Z = dsin(zdir);
    lx = x;ly = y;lz = z;lx2 = x+X*16;ly2 = y+Y*16;lz2 = z+Z*16;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw debug
if debug
{
    var H = window_get_height();
    draw_text(8,8,"FPS: "+string(fps_real))
    draw_text(8,H-166,"PG UP and PG DN keys control resolution")
    draw_text(8,H-152,"Resolution: "+string(size))
    draw_surface_stretched(XSdepth,0,H-128,128,128)
    
    draw_set_colour(acol)
    draw_rectangle(160,H-96,224,H-32,0)
    draw_set_colour(lcol)
    draw_rectangle(256,H-96,320,H-32,0)
    draw_set_colour($ffffff)
}
if help
{
    draw_text(8,22,"WASD keys to move")
    draw_text(8,36,"QE keys to move up and down")
    draw_text(8,50,"Mouse to turn")
    draw_text(8,64,"Space to set light")
    draw_text(8,78,"Enter to toggle soft shadows")
    draw_text(8,92,"1 Key to switch demo")
    draw_text(8,120,"F1 to toggle help")
    draw_text(8,134,"F2 to toggle debug mode")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw and update

surface_set_target(XSdepth)
draw_clear( c_white );
d3d_set_projection_ext(lx,ly,lz,lx2,ly2,lz2,0,0,1,90,1,1,65536)
XSmat = matrix_multiply(matrix_get(matrix_view), matrix_get(matrix_projection));

shader_set(shdr_depth)
draw_scene(demo)
shader_reset()

surface_reset_target()


d3d_set_projection_ext(x,y,z,x+dsin(direction+90)*dcos(zdir)*16,y+dcos(direction+90)*dcos(zdir)*16,z+dsin(zdir)*16,0,0,1,45,aspect,0.01,32000)

shader_set(shdr_point)
shader_set_uniform_matrix_array(Umat,XSmat)
texture_set_stage(Udep,surface_get_texture(XSdepth))
shader_set_uniform_f(Usize,surface_get_width(XSdepth))
shader_set_uniform_f(Ucol,colour_get_red(XScol)/255,colour_get_green(XScol)/255,colour_get_blue(XScol)/255)
shader_set_uniform_f(Uamb,colour_get_red(XSamb)/255,colour_get_green(XSamb)/255,colour_get_blue(XSamb)/255,XSambi)

draw_scene(demo)

shader_reset()

//d3d_draw_ellipsoid(lx-1,ly-1,lz-1,lx+1,ly+1,lz+1,-1,1,1,16)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug
debug = !debug;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Help
help = !help;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch demo
demo = !demo;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Randomize the colors
acol = make_colour_hsv( irandom(255),irandom(127),irandom(127));
lcol = make_colour_hsv( irandom(255),irandom(255),128+irandom(127));
xs_set_colors(acol,lcol)
background_colour = acol;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
