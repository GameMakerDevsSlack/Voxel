<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

randomize();

debug = false;

direction = 315;
zdir      = -25;
z         = 100;
aspect    = view_wview[0]/view_hview[0];
znear     = 1;
zfar      = 2000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step

if ( mouse_check_button( mb_left ) ) {
    
    var _wx = window_mouse_get_x();
    var _wy = window_mouse_get_y();
    var _ww = window_get_width()/2;
    var _wh = window_get_height()/2;
    
    if ( window_has_focus() ) window_mouse_set( _ww, _wh );
    direction += 0.2 * ( _ww - _wx );
    zdir = clamp( zdir + 0.2*( _wh - _wy ), -89, 89 );
    
}

var _axis = 1 * ( keyboard_check( ord( "W" ) ) - keyboard_check( ord( "S" ) ) );
var _strafe = 1 * ( keyboard_check( ord( "D" ) ) - keyboard_check( ord( "A" ) ) );
x += lengthdir_x( _axis, direction ) + lengthdir_x( _strafe, direction - 90 );
y += lengthdir_y( _axis, direction ) + lengthdir_y( _strafe, direction - 90 );
z += 1 * ( keyboard_check( ord( "Q" ) ) - keyboard_check( ord( "E" ) ) );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UE1 - Set projection

var _x_to = x + dsin( direction + 90 ) * dcos( zdir );
var _y_to = y + dcos( direction + 90 ) * dcos( zdir );
var _z_to = z + dsin( zdir );

d3d_set_projection_ext(     x,     y,     z,
                        _x_to, _y_to, _z_to,
                            0,     0,     1,
                        45, aspect, 0.01, zfar );

//mtx_projection     = matrix_get( matrix_projection );
//mtx_inv_projection = InverseMatrix4( mtx_projection );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
